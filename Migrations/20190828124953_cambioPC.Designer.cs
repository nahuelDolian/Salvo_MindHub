// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoSalvo.Data;

namespace ProyectoSalvo.Migrations
{
    [DbContext(typeof(SalvoDatabaseContext))]
    [Migration("20190828124953_cambioPC")]
    partial class cambioPC
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProyectoSalvo.Models.Game", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate");

                    b.HasKey("Id");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("ProyectoSalvo.Models.GamePlayer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Gameid");

                    b.Property<DateTime>("JoinDate");

                    b.Property<long>("Playerid");

                    b.HasKey("Id");

                    b.HasIndex("Gameid");

                    b.HasIndex("Playerid");

                    b.ToTable("GamePlayer");
                });

            modelBuilder.Entity("ProyectoSalvo.Models.Player", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("ProyectoSalvo.Models.Salvo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("GamePlayerId");

                    b.Property<long>("Turn");

                    b.HasKey("Id");

                    b.HasIndex("GamePlayerId");

                    b.ToTable("Salvos");
                });

            modelBuilder.Entity("ProyectoSalvo.Models.SalvoLocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Location");

                    b.Property<long?>("SalvoId");

                    b.HasKey("Id");

                    b.HasIndex("SalvoId");

                    b.ToTable("SalvoLocation");
                });

            modelBuilder.Entity("ProyectoSalvo.Models.Score", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FinishDate");

                    b.Property<long>("GameId");

                    b.Property<long>("PlayerId");

                    b.Property<double>("Point");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Score");
                });

            modelBuilder.Entity("ProyectoSalvo.Models.Ship", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("GamePlayerID");

                    b.Property<long>("Lenght");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.HasIndex("GamePlayerID");

                    b.ToTable("Ship");
                });

            modelBuilder.Entity("ProyectoSalvo.Models.ShipLocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Location");

                    b.Property<string>("Ship");

                    b.Property<long>("ShipId");

                    b.HasKey("Id");

                    b.HasIndex("ShipId");

                    b.ToTable("ShipLocation");
                });

            modelBuilder.Entity("ProyectoSalvo.Models.GamePlayer", b =>
                {
                    b.HasOne("ProyectoSalvo.Models.Game", "Game")
                        .WithMany("GamePlayer")
                        .HasForeignKey("Gameid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoSalvo.Models.Player", "Player")
                        .WithMany("GamePlayer")
                        .HasForeignKey("Playerid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoSalvo.Models.Salvo", b =>
                {
                    b.HasOne("ProyectoSalvo.Models.GamePlayer", "GamePlayer")
                        .WithMany("salvos")
                        .HasForeignKey("GamePlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoSalvo.Models.SalvoLocation", b =>
                {
                    b.HasOne("ProyectoSalvo.Models.Salvo")
                        .WithMany("Locations")
                        .HasForeignKey("SalvoId");
                });

            modelBuilder.Entity("ProyectoSalvo.Models.Score", b =>
                {
                    b.HasOne("ProyectoSalvo.Models.Game", "Game")
                        .WithMany("Scores")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProyectoSalvo.Models.Player", "Player")
                        .WithMany("Scores")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoSalvo.Models.Ship", b =>
                {
                    b.HasOne("ProyectoSalvo.Models.GamePlayer", "GamePlayer")
                        .WithMany("ships")
                        .HasForeignKey("GamePlayerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoSalvo.Models.ShipLocation", b =>
                {
                    b.HasOne("ProyectoSalvo.Models.Ship")
                        .WithMany("Locations")
                        .HasForeignKey("ShipId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
